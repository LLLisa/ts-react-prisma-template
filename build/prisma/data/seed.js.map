{"version":3,"file":"seed.js","sourceRoot":"","sources":["../../../prisma/data/seed.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2CAA8C;AAC9C,yCAAqD;AAErD,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AAElC,SAAe,MAAM;;QACnB,IAAI;YACF,MAAM,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC9B,IAAI,EAAE,sBAAW;gBACjB,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;YACH,MAAM,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;gBAC7B,IAAI,EAAE,qBAAU;gBAChB,cAAc,EAAE,IAAI;aACrB,CAAC,CAAC;SACJ;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;CAAA;AAED,MAAM,MAAM,GAAG,GAAS,EAAE;IACxB,IAAI;QACF,MAAM,EAAE,CAAC;QACT,MAAM,MAAM,CAAC,WAAW,CAAC;KAC1B;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,MAAM,CAAC,WAAW,CAAC;QACzB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;AACH,CAAC,CAAA,CAAC;AAEF,MAAM,EAAE,CAAC","sourcesContent":["import { PrismaClient } from '@prisma/client';\nimport { studentSeed, schoolSeed } from './seedData';\n\nconst prisma = new PrismaClient();\n\nasync function dbSeed() {\n  try {\n    await prisma.student.createMany({\n      data: studentSeed,\n      skipDuplicates: true,\n    });\n    await prisma.school.createMany({\n      data: schoolSeed,\n      skipDuplicates: true,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst dbSync = async () => {\n  try {\n    dbSeed();\n    await prisma.$disconnect;\n  } catch (error) {\n    console.error(error);\n    await prisma.$disconnect;\n    process.exit(1);\n  }\n};\n\ndbSync();\n"]}